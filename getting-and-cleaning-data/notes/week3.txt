Week 3
-------------------------
Subsetting and sorting:
----------------------
subset using [,]:
X[X$bar <= 10,] - including NAs
X[which(X$bar < 8),] - disregard NAs

sort:
sort(X$bar)
X[order(X$bar1, X$bar2),] - sort by column bar1 first, then bar2
plyr:
    library(plyr)
    arrange(X, bar)

Summarizing data:
-----------------
head()
tail()
summary()
str()
quantile()
table()
sum(is.na())
any(is.na())
all(X$bar > 0)
colSums(is.na())
rowSums(is.na())
table(X&bar %in% c("21212", "21213"))
DF = as.data.frame()
xtabs(Freq ~ Gender + Admit, data = DF)
xtabs(breaks ~., data=warpbreaks)
ftable()
object.size()

Creating new variables:
-----------------------
Common variables to create:
    - missingness indicators
    - "cutting up" quantitative variables
    - applying transforms

Creating sequences:
    seq(1, 10, by=2)
    seq(1, 10, length=3)
    x <- c(1, 3, 8, 25, 100); seq(along = x)

ifelse(condition, T, F)
cut(restData$zipCode, breaks=quantile(restData$zipCode))
library(Hmisc)
cut2(restData$zipCode, g=4)
factor(restData$zipCode)
relevel()
library(Himsc); library(plyr)
restData2 = mutate(restData, zipGroup=cut2(zipCode, 4)) //add zipGroup in new dataframe
round(x, digits=n)
signif(x, digits=n)
cos(), sin()
log()
log2(), log10()
exp()

Reshaping data:
---------------
Melting data frames:
    library(reshape2)
    mtcars$carname <- rownames(mtcars)
    carMelt <- melt(mtcars, id=c("carname", "gear, cyl"), mearsure.vars=c("mpg", "hp"))
Cast data frames:
    dcast(carMelt, cyl ~ variable)
    dcast(carMelt, cyl ~ variable, mean)
tapply(,,)
sapply(,)
split()
lapply(splic(),)
unlist()
ddply(data, .(columnname), summarize, sum=sum(columnname)) - plyr pkg
ddaply(data, .(columnname), summarize, sum=ave(count, FUN=sum))

dplyr:
------
arrange: reorder rows of a data frame (sort)
filter: extract a subset of rows from a data frame based on logical conditions
select: return a subset of the columns of a data frame
mutate: add new variables/columns or transform existing variables
rename: rename variables in a data frame
summarize: generate summary statistics of different variables in the data frame,
possibly within strata

dplyr Properties:
- The first argument is a data frame.
- The subsequent arguments describe what to do with it, and you can refer to columns
in the data frame directly without using the $ operator (just use the names).
- The result is a new data frame
- Data frames must be properly formatted and annotated for this to all be useful

Merging data:
-------------
merge(x,y,by.x,by.y,all)
join() - faster but less full featured
join_all(list(dataframe1,dataframe2,dataframe3))
