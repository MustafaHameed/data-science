## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
outcome
}
best("PA", 2)
best("PA", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
data[, state]
}
best("PA", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
data$state
}
best("PA", "heart attack")
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
str(data)
names(data)
head(data)
data$State == "PA"
data["State"] == "PA"
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
selectState <- data["State"] == state
selectData <- data[selectState,]
selectData
}
best["PA", "heart attack"]
best("PA", "heart attack")
head(best("PA", "heart attack"))
head(data)
names(data)
with(data, Hospital.Name[which.min(11)])
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
selectState <- data["State"] == state
selectData <- data[selectState,]
selectData[, col] <- as.numberic(selectData[, col])
with(selectData, Hospital.Name[which.min(col)])
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
selectState <- data["State"] == state
selectData <- data[selectState,]
selectData[, col] <- as.numeric(selectData[, col])
with(selectData, Hospital.Name[which.min(col)])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
selectState <- data["State"] == state
selectData <- data[selectState,]
selectData[, col] <- as.numeric(selectData[, col])
with(selectData, Hospital.Name[which.min(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
a, b <- 1, 2
colname(data[11])
colnames(data)[11]
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
selectState <- data["State"] == state
selectData <- data[selectState,]
selectData[, col] <- as.numeric(selectData[, col])
with(selectData, Hospital.Name[which.min("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(print(colnames(fData)[col],
quote=FALSE))])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
str(paste)
noquote("a")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(noquote(colnames(fData)[col]))])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
colnames(data)[11]
noquote(colnames(data)[11])
noquote("a")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(noquote(colnames(fData)[col]))])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
noquote(colnames(data)[11])
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(noquote(colnames(fData)[col]))])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
?with
?which.min
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(fData[col])])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(!(state %in% data$State)) {
stop('invalid state')
}
if(outcome != "heart attack" && outcome != "heart failure"
&& outcome != "pneumonia") {
stop('invalid outcome')
}
## Return hospital name in that state with lowest 30-day death
## rate
col <- if(outcome == "heart attack") {
11
} else if(outcome == "heart failure") {
17
} else {
23
}
filter <- data["State"] == state
fData <- data[filter,]
fData[, col] <- as.numeric(fData[, col])
with(fData, Hospital.Name[which.min(fData[, col])])
}
#test
best("TX", "heart attack")
#[1] "CYPRESS FAIRBANKS MEDICAL CENTER"
best("TX", "heart failure")
#[1] "FORT DUNCAN MEDICAL CENTER"
best("MD", "heart attack")
#[1] "JOHNS HOPKINS HOSPITAL, THE"
best("MD", "pneumonia")
#[1] "GREATER BALTIMORE MEDICAL CENTER"
best("BB", "heart attack")
#Error in best("BB", "heart attack") : invalid state
best("NY", "hert attack")
#Error in best("NY", "hert attack") : invalid outcome
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit(0)
submit()
submit()
